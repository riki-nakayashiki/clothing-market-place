{"ast":null,"code":"import VueCookies from 'vue-cookies';\nimport Message from './Message.vue';\nexport default {\n  name: 'ChatSection',\n  components: {\n    Message\n  },\n  data() {\n    return {\n      logged: false,\n      userName: \"\",\n      userId: null,\n      loginUser: \"\"\n    };\n  },\n  props: {\n    chatList: {},\n    descriptionData: {}\n  },\n  methods: {\n    selectChat() {\n      this.$emit('selectedChatId', this.chatList[0].chatId);\n    },\n    hideButton() {\n      console.log(this.descriptionData.userId);\n      if (this.descriptionData.userId != this.loginUser) {\n        document.getElementsByClassName(\"replyButton\")[0].style.display = \"none\";\n      }\n    }\n  },\n  mounted() {\n    this.hideButton();\n  },\n  created() {\n    if (VueCookies.isKey(\"user\")) {\n      this.userId = VueCookies.get(\"user\").userId;\n      this.logged = true;\n      this.loginUser = VueCookies.get(\"user\").userId;\n    } else {\n      this.logged = false;\n    }\n  }\n};","map":{"version":3,"names":["VueCookies","Message","name","components","data","logged","userName","userId","loginUser","props","chatList","descriptionData","methods","selectChat","$emit","chatId","hideButton","console","log","document","getElementsByClassName","style","display","mounted","created","isKey","get"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/karigui/src/components/description/Chat.vue"],"sourcesContent":["<template>\n    <article>\n        <Message v-for=\"message in chatList\" :key=\"message\" :message=\"message\" :descriptionData=\"this.descriptionData\"/>\n        <button @click=\"selectChat\" class=\"replyButton\">Reply</button>\n    </article>\n</template>\n\n<script>\nimport VueCookies from 'vue-cookies';\nimport Message from './Message.vue';\nexport default{\n    name:'ChatSection',\n    components:{\n        Message\n    },\n    data() {\n        return {\n            logged: false,\n            userName: \"\",\n            userId:null,\n            loginUser:\"\"\n        }\n    },\n    props:{\n        chatList:{},\n        descriptionData:{}\n    },\n    methods:{\n        selectChat(){\n            this.$emit('selectedChatId' , this.chatList[0].chatId);\n        },\n        hideButton(){\n            console.log(this.descriptionData.userId)\n            if(this.descriptionData.userId != this.loginUser){\n                document.getElementsByClassName(\"replyButton\")[0].style.display = \"none\";\n            }\n        }\n    },\n    mounted(){\n        this.hideButton();\n    },\n    created(){\n        if(VueCookies.isKey(\"user\")) {\n            this.userId = VueCookies.get(\"user\").userId;\n            this.logged = true;\n            this.loginUser = VueCookies.get(\"user\").userId;\n        } else {\n            this.logged = false;\n\n        }\n    }\n}\n</script>"],"mappings":"AAQA,OAAOA,UAAS,MAAO,aAAa;AACpC,OAAOC,OAAM,MAAO,eAAe;AACnC,eAAc;EACVC,IAAI,EAAC,aAAa;EAClBC,UAAU,EAAC;IACPF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAC,IAAI;MACXC,SAAS,EAAC;IACd;EACJ,CAAC;EACDC,KAAK,EAAC;IACFC,QAAQ,EAAC,CAAC,CAAC;IACXC,eAAe,EAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAC;IACJC,UAAUA,CAAA,EAAE;MACR,IAAI,CAACC,KAAK,CAAC,gBAAe,EAAI,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC;IAC1D,CAAC;IACDC,UAAUA,CAAA,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,eAAe,CAACJ,MAAM;MACvC,IAAG,IAAI,CAACI,eAAe,CAACJ,MAAK,IAAK,IAAI,CAACC,SAAS,EAAC;QAC7CW,QAAQ,CAACC,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,OAAM,GAAI,MAAM;MAC5E;IACJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACP,UAAU,CAAC,CAAC;EACrB,CAAC;EACDQ,OAAOA,CAAA,EAAE;IACL,IAAGxB,UAAU,CAACyB,KAAK,CAAC,MAAM,CAAC,EAAE;MACzB,IAAI,CAAClB,MAAK,GAAIP,UAAU,CAAC0B,GAAG,CAAC,MAAM,CAAC,CAACnB,MAAM;MAC3C,IAAI,CAACF,MAAK,GAAI,IAAI;MAClB,IAAI,CAACG,SAAQ,GAAIR,UAAU,CAAC0B,GAAG,CAAC,MAAM,CAAC,CAACnB,MAAM;IAClD,OAAO;MACH,IAAI,CAACF,MAAK,GAAI,KAAK;IAEvB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}