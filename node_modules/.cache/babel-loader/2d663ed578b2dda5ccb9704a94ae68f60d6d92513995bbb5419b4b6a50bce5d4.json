{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nlet url = new URL(window.location.href);\nlet params = url.searchParams;\nlet userId = params.get('userId');\nimport ProductCard from '../ProductCard.vue';\nimport FooterSection from '../Footer.vue';\nimport HeaderSection from '../Header.vue';\nexport default {\n  name: 'UserPage',\n  components: {\n    ProductCard,\n    FooterSection,\n    HeaderSection\n  },\n  data() {\n    return {\n      localProductList: [],\n      userApi: `http://localhost:80/karigui/rest-api/rest/api/V1/user.php?userId=${userId}`,\n      productUserApi: `http://localhost:80/karigui/rest-api/rest/api/V1/productsUser.php`,\n      userData: {},\n      productList: []\n    };\n  },\n  props: {\n    // productList: []\n  },\n  methods: {\n    async getUserData() {\n      try {\n        let result = await fetch(this.userApi);\n        this.userData = await result.json();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getProductUserData() {\n      try {\n        let result = await fetch(this.productUserApi);\n        this.productList = await result.json();\n        this.localProductList = this.productList.filter(product => product.userId == userId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  created() {\n    this.getUserData();\n  },\n  beforeUpdate() {\n    this.getProductUserData();\n  },\n  mounted() {\n    if (localStorage.getItem('reloaded')) {\n      // The page was just reloaded. Clear the value from local storage\n      // so that it will reload the next time this page is visited.\n      localStorage.removeItem('reloaded');\n    } else {\n      // Set a flag so that we know not to reload the page twice.\n      localStorage.setItem('reloaded', '1');\n      location.reload();\n    }\n  }\n};","map":{"version":3,"names":["url","URL","window","location","href","params","searchParams","userId","get","ProductCard","FooterSection","HeaderSection","name","components","data","localProductList","userApi","productUserApi","userData","productList","props","methods","getUserData","result","fetch","json","error","console","log","getProductUserData","filter","product","created","beforeUpdate","mounted","localStorage","getItem","removeItem","setItem","reload"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/karigui/src/components/Page/UserPage.vue"],"sourcesContent":["<template>\n    <HeaderSection />\n    <section class=\"user-page\">\n        <figure class=\"user-profile\">\n            <img :src=\"userData.userAvatar\" :alt=\"userData.userName\">\n            <figcaption>\n                <h2>{{ userData.userName }}</h2>\n                <aside>\n                    Brief self-introduction:<br />\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis eum harum consectetur ad earum ipsa est\n                    in maiores? Distinctio nulla repellendus quidem quae facilis fugit nostrum dolorem odit asperiores?\n                    Fugit?\n                </aside>\n            </figcaption>\n            <article>\n                <p>#TrustedSeller</p>\n                <p>#SpeedyShipper</p>\n                <p>#QuickResponder</p>\n                <p>#Reliable</p>\n                <p>#xxxxxxxxx</p>\n                <p>#xxxxxxxxx</p>\n                <p>#xxxxxxxxx</p>\n            </article>\n        </figure>\n        <section class=\"user-contents\">\n            <article class=\"user-info\">\n                <aside>\n                    <strong>4.6 ★★★★★</strong>\n                    <p>Reviews</p>\n                </aside>\n                <aside>\n                    <strong>{{ localProductList.length }}</strong>\n                    <p>Items</p>\n                </aside>\n                <aside>\n                    <strong>222</strong>\n                    <p>Transactions</p>\n                </aside>\n            </article>\n            <div class=\"catalog\">\n                <product-card v-for=\"product in localProductList\" :key=\"product.productId\" :product=\"product\" />\n            </div>\n        </section>\n    </section>\n    <FooterSection />\n</template>\n\n<script>\nlet url = new URL(window.location.href);\nlet params = url.searchParams;\nlet userId = params.get('userId');\n\nimport ProductCard from '../ProductCard.vue';\nimport FooterSection from '../Footer.vue';\nimport HeaderSection from '../Header.vue';\n\nexport default {\n    name: 'UserPage',\n    components: {\n        ProductCard,\n        FooterSection,\n        HeaderSection\n    },\n    data() {\n        return {\n            localProductList: [],\n            userApi: `http://localhost:80/karigui/rest-api/rest/api/V1/user.php?userId=${userId}`,\n            productUserApi: `http://localhost:80/karigui/rest-api/rest/api/V1/productsUser.php`,\n            userData: {},\n            productList: []\n        }\n    },\n    props: {\n        // productList: []\n    },\n    methods: {\n        async getUserData() {\n            try {\n                let result = await fetch(this.userApi);\n                this.userData = await result.json();\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async getProductUserData() {\n            try {\n                let result = await fetch(this.productUserApi);\n                this.productList = await result.json();\n                this.localProductList = this.productList.filter(\n                    product => product.userId == userId);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    },\n    created() {\n        this.getUserData();\n    },\n    beforeUpdate() {\n        this.getProductUserData();\n    },\n    mounted() {\n        if (localStorage.getItem('reloaded')) {\n            // The page was just reloaded. Clear the value from local storage\n            // so that it will reload the next time this page is visited.\n            localStorage.removeItem('reloaded');\n        } else {\n            // Set a flag so that we know not to reload the page twice.\n            localStorage.setItem('reloaded', '1');\n            location.reload();\n        }\n    }\n}\n</script>"],"mappings":";AAgDA,IAAIA,GAAE,GAAI,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;AACvC,IAAIC,MAAK,GAAIL,GAAG,CAACM,YAAY;AAC7B,IAAIC,MAAK,GAAIF,MAAM,CAACG,GAAG,CAAC,QAAQ,CAAC;AAEjC,OAAOC,WAAU,MAAO,oBAAoB;AAC5C,OAAOC,aAAY,MAAO,eAAe;AACzC,OAAOC,aAAY,MAAO,eAAe;AAEzC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACRJ,WAAW;IACXC,aAAa;IACbC;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,gBAAgB,EAAE,EAAE;MACpBC,OAAO,EAAG,oEAAmET,MAAO,EAAC;MACrFU,cAAc,EAAG,mEAAkE;MACnFC,QAAQ,EAAE,CAAC,CAAC;MACZC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,KAAK,EAAE;IACH;EAAA,CACH;EACDC,OAAO,EAAE;IACL,MAAMC,WAAWA,CAAA,EAAG;MAChB,IAAI;QACA,IAAIC,MAAK,GAAI,MAAMC,KAAK,CAAC,IAAI,CAACR,OAAO,CAAC;QACtC,IAAI,CAACE,QAAO,GAAI,MAAMK,MAAM,CAACE,IAAI,CAAC,CAAC;MACvC,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACD,MAAMG,kBAAkBA,CAAA,EAAG;MACvB,IAAI;QACA,IAAIN,MAAK,GAAI,MAAMC,KAAK,CAAC,IAAI,CAACP,cAAc,CAAC;QAC7C,IAAI,CAACE,WAAU,GAAI,MAAMI,MAAM,CAACE,IAAI,CAAC,CAAC;QACtC,IAAI,CAACV,gBAAe,GAAI,IAAI,CAACI,WAAW,CAACW,MAAM,CAC3CC,OAAM,IAAKA,OAAO,CAACxB,MAAK,IAAKA,MAAM,CAAC;MAC5C,EAAE,OAAOmB,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC;EACDM,OAAOA,CAAA,EAAG;IACN,IAAI,CAACV,WAAW,CAAC,CAAC;EACtB,CAAC;EACDW,YAAYA,CAAA,EAAG;IACX,IAAI,CAACJ,kBAAkB,CAAC,CAAC;EAC7B,CAAC;EACDK,OAAOA,CAAA,EAAG;IACN,IAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;MAClC;MACA;MACAD,YAAY,CAACE,UAAU,CAAC,UAAU,CAAC;IACvC,OAAO;MACH;MACAF,YAAY,CAACG,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;MACrCnC,QAAQ,CAACoC,MAAM,CAAC,CAAC;IACrB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}