{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_router_view, {\n    productList: this.productList\n  }, null, 8 /* PROPS */, [\"productList\"]), _createCommentVNode(\" from router.js \")]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_router_view","productList","_createCommentVNode"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/karigui/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <router-view :productList=\"this.productList\"/>\n    <!-- from router.js -->\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data(){\n    return{\n      productApi:'http://localhost:80/karigui/rest-api/rest/api/V1/products.php',\n      productList:[],\n      filter:{\n        color: '',\n        size: '',\n        name: '',\n        gender: '',\n        price: '',\n        type: ''\n      }\n    }\n  },\n  methods:{\n    async getProducts(){\n      try{\n        let result = await fetch(this.productApi);\n        let products = await result.json();\n        let count = 1;\n        console.log(products.length)\n        for(let i = 0; i < products.length; i+=25) {\n          let tempArray = []\n          for (let j = i; j < (i + 25); j++) {\n            // this.productList[count] = []\n            if ( j > products.length-1 ) {\n              break;\n            }\n            tempArray.push(products[j]);\n          }\n          this.productList[count] = tempArray;\n          count++;\n        }   \n        console.log(this.productList);\n      }catch(error){\n        console.log(error);\n      }\n    },\n    async getProductsFilter(){\n      try{\n        let result = await fetch(`${this.productApi}?name=${this.filter.name}&size=${this.filter.size}&color=${this.filter.color}&gender=${this.filter.gender}&price=${this.filter.price}&type=${this.filter.type}`);\n        this.productList = await result.json();\n        console.log(this.filter);\n      }catch(error){\n        console.log(error);\n      }\n    }\n  },\n  created(){\n    this.getProducts();\n  }\n}\n</script>\n\n<style>\n@import url(\"./css/style.css\");\n</style>\n"],"mappings":";;;uBACEA,mBAAA,CAGM,cAFJC,YAAA,CAA8CC,sBAAA;IAAhCC,WAAW,OAAOA;4CAChCC,mBAAA,oBAAuB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}