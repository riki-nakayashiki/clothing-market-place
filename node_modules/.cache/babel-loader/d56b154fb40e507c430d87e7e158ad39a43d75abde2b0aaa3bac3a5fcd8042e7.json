{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport VueCookies from 'vue-cookies';\nimport Chat from './Chat.vue';\nlet url = new URL(window.location.href);\nlet params = url.searchParams;\nlet productId = params.get('productId');\nexport default {\n  name: \"DescriptionRight\",\n  components: {\n    Chat\n  },\n  data() {\n    return {\n      chatApi: `http://localhost:80/karigui/rest-api/rest/api/V1/chat.php?productId=${productId}`,\n      chatData: [],\n      selectedChatId: 0,\n      messageObj: {\n        message: \"\",\n        senderId: \"\",\n        productId: \"\",\n        chatId: 0\n      },\n      logged: false,\n      userName: \"\",\n      userId: null,\n      loginUser: \"\"\n    };\n  },\n  props: {\n    descriptionData: {}\n  },\n  methods: {\n    async getChatData() {\n      try {\n        let result = await fetch(this.chatApi);\n        this.chatData = await result.json();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    getChatId(chatId) {\n      this.selectedChatId = chatId;\n      document.getElementsByClassName(\"commentSection\")[0].style.display = \"flex\";\n    },\n    async postMessage() {\n      this.messageObj.productId = productId;\n      this.messageObj.senderId = this.loginUser;\n      if (this.messageObj.senderId == this.descriptionData.userId) {\n        //if sender is product owner\n        this.messageObj.chatId = this.selectedChatId;\n      } else {\n        for (let i = 0; i < this.chatData.length; i++) {\n          if (this.messageObj.senderId == this.chatData[i][0].senderId) {\n            //if sender already is an existed questioner\n            this.messageObj.chatId = this.chatData[i][0].chatId;\n          }\n        }\n      }\n      try {\n        console.log(this.messageObj);\n        await fetch(this.chatApi, {\n          method: \"POST\",\n          body: JSON.stringify(this.messageObj)\n        }).then(response => response.text()).then(data => {\n          console.log(data);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n      // location.reload();\n    },\n\n    hideComment() {\n      console.log(this.descriptionData.userId);\n      if (this.descriptionData.userId == this.loginUser) {\n        document.getElementsByClassName(\"commentSection\")[0].style.display = \"none\";\n      }\n    }\n  },\n  mounted() {\n    this.hideComment();\n  },\n  created() {\n    this.getChatData();\n    if (VueCookies.isKey(\"user\")) {\n      this.userId = VueCookies.get(\"user\").userId;\n      this.logged = true;\n      this.loginUser = VueCookies.get(\"user\").userId;\n    } else {\n      this.logged = false;\n    }\n  }\n};","map":{"version":3,"names":["VueCookies","Chat","url","URL","window","location","href","params","searchParams","productId","get","name","components","data","chatApi","chatData","selectedChatId","messageObj","message","senderId","chatId","logged","userName","userId","loginUser","props","descriptionData","methods","getChatData","result","fetch","json","error","console","log","getChatId","document","getElementsByClassName","style","display","postMessage","i","length","method","body","JSON","stringify","then","response","text","hideComment","mounted","created","isKey"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/karigui/src/components/description/DescriptionRight.vue"],"sourcesContent":["<template>\n    <section class=\"desRight\">\n        <h2>{{descriptionData.productName}}</h2>\n        <section>\n            <article>\n                <section>\n                    <h3>${{descriptionData.price}}</h3>\n                    <span>\n                        <h4>{{descriptionData.category}},</h4>\n                        <h4>{{descriptionData.type}}</h4>\n                    </span>\n                </section>\n                <section>\n                    <button class=\"buyDes\">\n                        Buy\n                    </button>\n                    <label for=\"wishlist\">\n                        <i class=\"fa-regular fa-heart\"></i>\n                        <i class=\"fa-solid fa-heart\"></i>\n                    </label>\n                    <button hidden class=\"like\" id=\"wishlist\"></button>\n                </section>\n            </article>\n            <p>I bought this at online shop 2 years ago. However, I haven't used that much, so the condition of this product is pretty good. My size is {{ descriptionData.size }}, so it fit the official size.</p>\n        </section>\n        <ul>\n            <li>Size: <strong>{{descriptionData.size}}</strong></li>\n            <li>Color: <strong>{{descriptionData.baseColor}}</strong></li>\n            <li>Gender: <strong>{{descriptionData.gender}}</strong></li>\n        </ul>\n        <blockquote>\n            <figure>\n                <figcaption><h3>Sold by: {{descriptionData.userName}}</h3></figcaption>\n                <router-link :to=\"`/profile?userId=${descriptionData.userId}`\">\n                    <img :src=\"descriptionData.userAvatar\" alt=\"\">\n                </router-link>\n            </figure>\n            <section class=\"comments\">\n                <Chat v-for=\"chatList in chatData\" :key=\"chatList[0]\" :chatList=\"chatList\" :descriptionData=\"this.descriptionData\" @selectedChatId=\"getChatId\"/>\n            </section>\n            <form v-on:submit.prevent=\"postMessage\" class=\"commentSection\">\n                <textarea name=\"comment\" id=\"comment\" placeholder=\"Write your comment\" v-model.lazy=\"messageObj.message\" required></textarea>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </blockquote>\n    </section>\n</template>\n\n<script>\nimport VueCookies from 'vue-cookies';\nimport Chat from './Chat.vue';\n\nlet url = new URL(window.location.href);\nlet params = url.searchParams;\nlet productId = params.get('productId');\n\nexport default{\n    name: \"DescriptionRight\",\n    components: { Chat },\n    data(){\n        return{\n            chatApi:`http://localhost:80/karigui/rest-api/rest/api/V1/chat.php?productId=${productId}`,\n            chatData:[],\n            selectedChatId: 0,\n\n            messageObj:{\n                message: \"\",\n                senderId: \"\",\n                productId: \"\",\n                chatId: 0\n            },\n            \n            logged: false,\n            userName: \"\",\n            userId:null,\n            loginUser:\"\"\n        }\n    },\n    props:{\n        descriptionData:{}\n    },\n    methods:{\n        async getChatData(){\n            try{\n                let result = await fetch(this.chatApi);\n                this.chatData = await result.json();\n            }catch(error){\n                console.log(error);\n\n            }\n        },\n        getChatId(chatId){\n            this.selectedChatId = chatId;\n            document.getElementsByClassName(\"commentSection\")[0].style.display = \"flex\";\n        },\n        async postMessage(){\n            this.messageObj.productId = productId;\n            this.messageObj.senderId = this.loginUser;\n            if(this.messageObj.senderId == this.descriptionData.userId){\n            //if sender is product owner\n                this.messageObj.chatId = this.selectedChatId;\n            }else{\n                for(let i=0; i < this.chatData.length; i++){\n                    if(this.messageObj.senderId == (this.chatData[i])[0].senderId){\n                    //if sender already is an existed questioner\n                        this.messageObj.chatId = (this.chatData[i])[0].chatId;\n                    }\n                     \n                }\n            }\n            try {\n                console.log(this.messageObj);\n                await fetch(\n                this.chatApi,\n                {\n                    method: \"POST\",\n                    body: JSON.stringify(this.messageObj)\n                }\n                ).then((response) => response.text()\n                ).then((data) => {\n                console.log(data);\n                });\n            } catch(error) {\n                console.log(error);\n            }\n            // location.reload();\n        },\n        hideComment(){\n            console.log(this.descriptionData.userId);\n            if(this.descriptionData.userId == this.loginUser){\n                document.getElementsByClassName(\"commentSection\")[0].style.display = \"none\";\n            }\n        }\n    },\n    mounted(){\n        this.hideComment();\n    },\n    created() {\n        this.getChatData();\n        if (VueCookies.isKey(\"user\")) {\n            this.userId = VueCookies.get(\"user\").userId;\n            this.logged = true;\n            this.loginUser = VueCookies.get(\"user\").userId;\n        } else {\n            this.logged = false;\n\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}