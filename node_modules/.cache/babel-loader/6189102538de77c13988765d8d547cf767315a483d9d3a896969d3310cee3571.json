{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"desRight\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<section><button class=\\\"buyDes\\\"> Buy </button><label for=\\\"wishlist\\\"><i class=\\\"fa-regular fa-heart\\\"></i><i class=\\\"fa-solid fa-heart\\\"></i></label><button hidden class=\\\"like\\\" id=\\\"wishlist\\\"></button></section>\", 1);\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"comments\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_Chat = _resolveComponent(\"Chat\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($props.descriptionData.productName), 1 /* TEXT */), _createElementVNode(\"section\", null, [_createElementVNode(\"article\", null, [_createElementVNode(\"section\", null, [_createElementVNode(\"h3\", null, \"$\" + _toDisplayString($props.descriptionData.price), 1 /* TEXT */), _createElementVNode(\"span\", null, [_createElementVNode(\"h4\", null, _toDisplayString($props.descriptionData.category) + \",\", 1 /* TEXT */), _createElementVNode(\"h4\", null, _toDisplayString($props.descriptionData.type), 1 /* TEXT */)])]), _hoisted_2]), _createElementVNode(\"p\", null, \"I bought this at online shop 2 years ago. However, I haven't used that much, so the condition of this product is pretty good. My size is \" + _toDisplayString($props.descriptionData.size) + \", so it fit the official size.\", 1 /* TEXT */)]), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createTextVNode(\"Size: \"), _createElementVNode(\"strong\", null, _toDisplayString($props.descriptionData.size), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createTextVNode(\"Color: \"), _createElementVNode(\"strong\", null, _toDisplayString($props.descriptionData.baseColor), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createTextVNode(\"Gender: \"), _createElementVNode(\"strong\", null, _toDisplayString($props.descriptionData.gender), 1 /* TEXT */)])]), _createElementVNode(\"blockquote\", null, [_createElementVNode(\"figure\", null, [_createElementVNode(\"figcaption\", null, [_createElementVNode(\"h3\", null, \"Sold by: \" + _toDisplayString($props.descriptionData.userName), 1 /* TEXT */)]), _createVNode(_component_router_link, {\n    to: `/profile?userId=${$props.descriptionData.userId}`\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $props.descriptionData.userAvatar,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])]), _createElementVNode(\"section\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatData, chatList => {\n    return _openBlock(), _createBlock(_component_Chat, {\n      key: chatList[0],\n      chatList: chatList,\n      descriptionData: this.descriptionData,\n      onSelectedChatId: $options.getChatId\n    }, null, 8 /* PROPS */, [\"chatList\", \"descriptionData\", \"onSelectedChatId\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.postMessage && $options.postMessage(...args), [\"prevent\"])),\n    class: \"commentSection\"\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    name: \"comment\",\n    id: \"comment\",\n    placeholder: \"Write your comment\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.messageObj.message = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.messageObj.message, void 0, {\n    lazy: true\n  }]]), _hoisted_5], 32 /* HYDRATE_EVENTS */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_toDisplayString","$props","descriptionData","productName","price","category","_hoisted_2","size","baseColor","gender","userName","_createVNode","_component_router_link","to","userId","src","userAvatar","alt","_hoisted_4","_Fragment","_renderList","$data","chatData","chatList","_createBlock","_component_Chat","key","onSelectedChatId","$options","getChatId","onSubmit","_cache","_withModifiers","args","postMessage","name","id","placeholder","messageObj","message","$event","required","_hoisted_5"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/karigui/src/components/description/DescriptionRight.vue"],"sourcesContent":["<template>\n    <section class=\"desRight\">\n        <h2>{{descriptionData.productName}}</h2>\n        <section>\n            <article>\n                <section>\n                    <h3>${{descriptionData.price}}</h3>\n                    <span>\n                        <h4>{{descriptionData.category}},</h4>\n                        <h4>{{descriptionData.type}}</h4>\n                    </span>\n                </section>\n                <section>\n                    <button class=\"buyDes\">\n                        Buy\n                    </button>\n                    <label for=\"wishlist\">\n                        <i class=\"fa-regular fa-heart\"></i>\n                        <i class=\"fa-solid fa-heart\"></i>\n                    </label>\n                    <button hidden class=\"like\" id=\"wishlist\"></button>\n                </section>\n            </article>\n            <p>I bought this at online shop 2 years ago. However, I haven't used that much, so the condition of this product is pretty good. My size is {{ descriptionData.size }}, so it fit the official size.</p>\n        </section>\n        <ul>\n            <li>Size: <strong>{{descriptionData.size}}</strong></li>\n            <li>Color: <strong>{{descriptionData.baseColor}}</strong></li>\n            <li>Gender: <strong>{{descriptionData.gender}}</strong></li>\n        </ul>\n        <blockquote>\n            <figure>\n                <figcaption><h3>Sold by: {{descriptionData.userName}}</h3></figcaption>\n                <router-link :to=\"`/profile?userId=${descriptionData.userId}`\">\n                    <img :src=\"descriptionData.userAvatar\" alt=\"\">\n                </router-link>\n            </figure>\n            <section class=\"comments\">\n                <Chat v-for=\"chatList in chatData\" :key=\"chatList[0]\" :chatList=\"chatList\" :descriptionData=\"this.descriptionData\" @selectedChatId=\"getChatId\"/>\n            </section>\n            <form v-on:submit.prevent=\"postMessage\" class=\"commentSection\">\n                <textarea name=\"comment\" id=\"comment\" placeholder=\"Write your comment\" v-model.lazy=\"messageObj.message\" required></textarea>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </blockquote>\n    </section>\n</template>\n\n<script>\nimport VueCookies from 'vue-cookies';\nimport Chat from './Chat.vue';\n\nlet url = new URL(window.location.href);\nlet params = url.searchParams;\nlet productId = params.get('productId');\n\nexport default{\n    name: \"DescriptionRight\",\n    components: { Chat },\n    data(){\n        return{\n            chatApi:`http://localhost:80/karigui/rest-api/rest/api/V1/chat.php?productId=${productId}`,\n            chatData:[],\n            selectedChatId: 0,\n\n            messageObj:{\n                message: \"\",\n                senderId: \"\",\n                productId: \"\",\n                chatId: 0\n            },\n            \n            logged: false,\n            userName: \"\",\n            userId:null,\n            loginUser:\"\"\n        }\n    },\n    props:{\n        descriptionData:{}\n    },\n    methods:{\n        async getChatData(){\n            try{\n                let result = await fetch(this.chatApi);\n                this.chatData = await result.json();\n            }catch(error){\n                console.log(error);\n\n            }\n        },\n        getChatId(chatId){\n            this.selectedChatId = chatId;\n            document.getElementsByClassName(\"commentSection\")[0].style.display = \"flex\";\n        },\n        async postMessage(){\n            this.messageObj.productId = productId;\n            this.messageObj.senderId = this.loginUser;\n            if(this.messageObj.senderId == this.descriptionData.userId){\n            //if sender is product owner\n                this.messageObj.chatId = this.selectedChatId;\n            }else{\n                for(let i=0; i < this.chatData.length; i++){\n                    if(this.messageObj.senderId == (this.chatData[i])[0].senderId){\n                    //if sender already is an existed questioner\n                        this.messageObj.chatId = (this.chatData[i])[0].chatId;\n                    }\n                     \n                }\n            }\n            try {\n                console.log(this.messageObj);\n                await fetch(\n                this.chatApi,\n                {\n                    method: \"POST\",\n                    body: JSON.stringify(this.messageObj)\n                }\n                ).then((response) => response.text()\n                ).then((data) => {\n                console.log(data);\n                });\n            } catch(error) {\n                console.log(error);\n            }\n            // location.reload();\n        },\n        hideComment(){\n            console.log(this.descriptionData.userId);\n            if(this.descriptionData.userId == this.loginUser){\n                document.getElementsByClassName(\"commentSection\")[0].style.display = \"none\";\n            }\n        }\n    },\n    mounted(){\n        this.hideComment();\n    },\n    created() {\n        this.getChatData();\n        if (VueCookies.isKey(\"user\")) {\n            this.userId = VueCookies.get(\"user\").userId;\n            this.logged = true;\n            this.loginUser = VueCookies.get(\"user\").userId;\n        } else {\n            this.logged = false;\n\n        }\n    }\n}\n</script>"],"mappings":";;EACaA,KAAK,EAAC;AAAU;;;;EAoCRA,KAAK,EAAC;AAAU;gCAKrBC,mBAAA,CAAqC;EAA7BC,IAAI,EAAC;AAAQ,GAAC,QAAM;;;;;uBAzCxCC,mBAAA,CA4CU,WA5CVC,UA4CU,GA3CNH,mBAAA,CAAwC,YAAAI,gBAAA,CAAlCC,MAAA,CAAAC,eAAe,CAACC,WAAW,kBACjCP,mBAAA,CAqBU,kBApBNA,mBAAA,CAkBU,kBAjBNA,mBAAA,CAMU,kBALNA,mBAAA,CAAmC,YAA/B,GAAC,GAAAI,gBAAA,CAAEC,MAAA,CAAAC,eAAe,CAACE,KAAK,kBAC5BR,mBAAA,CAGO,eAFHA,mBAAA,CAAsC,YAAAI,gBAAA,CAAhCC,MAAA,CAAAC,eAAe,CAACG,QAAQ,IAAE,GAAC,iBACjCT,mBAAA,CAAiC,YAAAI,gBAAA,CAA3BC,MAAA,CAAAC,eAAe,CAACL,IAAI,iB,KAGlCS,UASU,C,GAEdV,mBAAA,CAAwM,WAArM,2IAAyI,GAAAI,gBAAA,CAAGC,MAAA,CAAAC,eAAe,CAACK,IAAI,IAAG,gCAA8B,gB,GAExMX,mBAAA,CAIK,aAHDA,mBAAA,CAAwD,a,iBAApD,QAAM,GAAAA,mBAAA,CAAyC,gBAAAI,gBAAA,CAA/BC,MAAA,CAAAC,eAAe,CAACK,IAAI,iB,GACxCX,mBAAA,CAA8D,a,iBAA1D,SAAO,GAAAA,mBAAA,CAA8C,gBAAAI,gBAAA,CAApCC,MAAA,CAAAC,eAAe,CAACM,SAAS,iB,GAC9CZ,mBAAA,CAA4D,a,iBAAxD,UAAQ,GAAAA,mBAAA,CAA2C,gBAAAI,gBAAA,CAAjCC,MAAA,CAAAC,eAAe,CAACO,MAAM,iB,KAEhDb,mBAAA,CAca,qBAbTA,mBAAA,CAKS,iBAJLA,mBAAA,CAAuE,qBAA3DA,mBAAA,CAA8C,YAA1C,WAAS,GAAAI,gBAAA,CAAEC,MAAA,CAAAC,eAAe,CAACQ,QAAQ,iB,GACnDC,YAAA,CAEcC,sBAAA;IAFAC,EAAE,qBAAqBZ,MAAA,CAAAC,eAAe,CAACY,MAAM;;sBACvD,MAA8C,CAA9ClB,mBAAA,CAA8C;MAAxCmB,GAAG,EAAEd,MAAA,CAAAC,eAAe,CAACc,UAAU;MAAEC,GAAG,EAAC;;;+BAGnDrB,mBAAA,CAEU,WAFVsB,UAEU,I,kBADNpB,mBAAA,CAAgJqB,SAAA,QAAAC,WAAA,CAAvHC,KAAA,CAAAC,QAAQ,EAApBC,QAAQ;yBAArBC,YAAA,CAAgJC,eAAA;MAA5GC,GAAG,EAAEH,QAAQ;MAAMA,QAAQ,EAAEA,QAAQ;MAAGrB,eAAe,OAAOA,eAAe;MAAGyB,gBAAc,EAAEC,QAAA,CAAAC;;oCAExIjC,mBAAA,CAGO;IAHIkC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUL,QAAA,CAAAM,WAAA,IAAAN,QAAA,CAAAM,WAAA,IAAAD,IAAA,CAAW;IAAEtC,KAAK,EAAC;sBAC1CC,mBAAA,CAA6H;IAAnHuC,IAAI,EAAC,SAAS;IAACC,EAAE,EAAC,SAAS;IAACC,WAAW,EAAC,oBAAoB;+DAAehB,KAAA,CAAAiB,UAAU,CAACC,OAAO,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAApBpB,KAAA,CAAAiB,UAAU,CAACC,OAAO,E;UAAhC;EAAiC,E,IACxGG,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}