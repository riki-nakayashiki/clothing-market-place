{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Message = _resolveComponent(\"Message\");\n  return _openBlock(), _createElementBlock(\"article\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.chatList, message => {\n    return _openBlock(), _createBlock(_component_Message, {\n      key: message,\n      message: message,\n      descriptionData: this.descriptionData\n    }, null, 8 /* PROPS */, [\"message\", \"descriptionData\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.selectChat && $options.selectChat(...args)),\n    class: \"replyButton\"\n  }, \"Reply\")]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$props","chatList","message","_createBlock","_component_Message","key","descriptionData","_createElementVNode","onClick","_cache","args","$options","selectChat","class"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/karigui/src/components/description/Chat.vue"],"sourcesContent":["<template>\n    <article>\n        <Message v-for=\"message in chatList\" :key=\"message\" :message=\"message\" :descriptionData=\"this.descriptionData\"/>\n        <button @click=\"selectChat\" class=\"replyButton\">Reply</button>\n    </article>\n</template>\n\n<script>\nimport VueCookies from 'vue-cookies';\nimport Message from './Message.vue';\nexport default{\n    name:'ChatSection',\n    components:{\n        Message\n    },\n    data() {\n        return {\n            logged: false,\n            userName: \"\",\n            userId:null,\n            loginUser:\"\"\n        }\n    },\n    props:{\n        chatList:{},\n        descriptionData:{}\n    },\n    methods:{\n        selectChat(){\n            this.$emit('selectedChatId' , this.chatList[0].chatId);\n        },\n        hideButton(){\n            console.log(this.descriptionData.userId)\n            if(this.descriptionData.userId != this.loginUser){\n                document.getElementsByClassName(\"replyButton\")[0].style.display = \"none\";\n            }\n        }\n    },\n    mounted(){\n        this.hideButton();\n    },\n    created(){\n        if(VueCookies.isKey(\"user\")) {\n            this.userId = VueCookies.get(\"user\").userId;\n            this.logged = true;\n            this.loginUser = VueCookies.get(\"user\").userId;\n        } else {\n            this.logged = false;\n\n        }\n    }\n}\n</script>"],"mappings":";;;uBACIA,mBAAA,CAGU,mB,kBAFNA,mBAAA,CAAgHC,SAAA,QAAAC,WAAA,CAArFC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAvBC,YAAA,CAAgHC,kBAAA;MAA1EC,GAAG,EAAEH,OAAO;MAAGA,OAAO,EAAEA,OAAO;MAAGI,eAAe,OAAOA;;kCAC9FC,mBAAA,CAA8D;IAArDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEG,KAAK,EAAC;KAAc,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}